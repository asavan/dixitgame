* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --main-color: #F0F8FF;
  --player-color: chartreuse;
  --card-width: 120px;
  --color-green: #5A5;
  --color-red: #F55;
  --color-yellow: #FA0;
  --color-blue: #55F;
  --color-white: #FFF;
  --color-pink: magenta;
  --current-color: aliceblue;
  --inverted-color: white;
  --background-url: url("./images/deck.png");
}

html, body { height: 100%; }

input, select, textarea, button {
  font-family: inherit;
  font-size: inherit;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 2rem;
}

ul { list-style-type: none; }

.selected { background-color: red; }

[data-id="0"] {
  --player-color: var(--color-yellow);

  background-color: color-mix(in srgb, aliceblue 80%, transparent);
}

[data-id="1"] {
  --player-color: var(--color-blue);

  background-color: color-mix(in srgb, aliceblue 80%, transparent);
}

[data-id="2"] {
  --player-color: var(--color-green);

  background-color: color-mix(in srgb, aliceblue 80%, transparent);
}

[data-id="3"] {
  --player-color: var(--color-pink);

  background-color: color-mix(in srgb, aliceblue 80%, transparent);
}

[data-id="4"] {
  --player-color: var(--color-red);

  background: rgb(255 255 255 / 60%);
}

[data-id="5"] {
  --player-color: var(--color-white);

  background: rgb(0 0 0 / 50%);
}

.circle-wrapper {
  flex-grow: 1;
  position: relative;
}

.score-diff { font-size: 4rem; }

.overlay-box {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: all 2s ease-in-out;
  color: black;
  border-radius: 50%;
  background: aliceblue;
  opacity: 0.8;
  z-index: 10;
  transform-origin: center center;
}

.large { transform: scale(2); }

.places {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
}

.my-hand {
  width: 100%;
  min-height: 135px;
  box-sizing: border-box;
  padding: 0 10px;
  font-size: 3rem;
  transition-property: background-color, color;
  transition-duration: 200ms;
  transition-timing-function: linear;
}

@media (max-width: 380px) { .my-hand { padding: 0 5px; } }

.hand .card { cursor: pointer; }

.clickable { cursor: pointer; }

.card-count {
  font-size: 3rem;
  display: none;
}

.circle {
  text-align: center;
  offset-path: ellipse(35% 25%);
  offset-distance: calc(1% * var(--path-pc));
  offset-rotate: 0deg;
  max-width: 125px;
  position: absolute;
}

.player-hand {
  min-height: 172px;
  background-color: var(--current-color);
}

.checkmark {
  display: inline-block;
  transform: rotate(45deg);
  height: 25px;
  width: 12px;
  margin-left: 60%;
  border-bottom: 7px solid #78b13f;
  border-right: 7px solid #78b13f;
}

.card.checked {
  position: relative;
  overflow: hidden;
}

.card.checked::after {
  content: "";
  background-color: transparent;

  /* position the checkbox */
  position: absolute;
  left: 30px;
  opacity: 1;
  top: 0;

  /* setting the checkbox */

  width: 50px;
  border-bottom: 30px solid #4D7C2A;
  height: 80px;
  border-right: 30px solid #4D7C2A;

  /* rotate the mirrored L to make it a checkbox */
  transform: rotate(45deg);
}

.player-name {
  white-space: nowrap;

  /* text-overflow: ellipsis; */
  color: var(--player-color);
  overflow: hidden;
}

.done .player-name::before { content: "✓"; }

.dealer .player-name::before { content: "*"; }
.dealer.done .player-name::before { content: "✓*"; }

.sprite-container { width: var(--card-width); }

.show-all { --card-width: 30px; }

.blank {
  width: var(--card-width);
  aspect-ratio: 2 / 3;
  background-color: var(--current-color);
}

.big-circle {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin: calc(var(--card-width) * -2);
  box-sizing: border-box;
  text-align: center;
  width: calc(var(--card-width) * 4);
  aspect-ratio: 1 / 1;
  z-index: -1;
}

.sprite {
  /* Create a Responsive Square */
  width: 100%;
  height: 0;
  padding-bottom: 150%;
  box-sizing: border-box;

  /* Set The Sprite as the Background */
  background-image: url("../images/deck.png");

  /* background-position: 0 0; */
  background-position: var(--sprite-x) var(--sprite-y);
  background-size: 1400%;
  display: block;
}

.sprite2 {
  display: block;
  max-width: 100%;
  max-height: 100%;
  width: 100%;
  aspect-ratio: 2 / 3;
  object-fit: cover;
}

.faint { opacity: 0.4; }

.sprite-back {
  /* Create a Responsive Square */
  width: 100%;
  height: 0;
  padding-bottom: 150%;

  /* Set The Sprite as the Background */
  background-image: url("./images/back.png");
  background-position: 0 0;
  background-size: 100%;
  display: block;
  border-radius: 10%;
  border: solid 0.3px;
}

.center-pile .sprite-back { cursor: pointer; }

.hand {
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
  position: relative;
}

.flat-button {
  --button-color: var(--current-color);

  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  margin: -50px;
  background: var(--button-color);
  border: none;
  border-radius: 50%;
  text-align: center;
  line-height: 100px;
}

.start-button { --button-color: var(--color-red); }

.bot-button {
  --button-color: var(--color-green);

  top: 75%;
}

.center-pile {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin: calc(var(--card-width) * -0.75) calc(var(--card-width) * -1);
  box-sizing: border-box;
  text-align: center;
}

.content { flex: 1 0 auto; }

footer {
  flex: 0 0 auto;
  width: 100%;
}

.container {
  background-color: var(--current-color);
  transition: background-color 500ms linear;
  width: 100%;
  max-width: 430px;
  height: 100%;
  display: block;
  position: relative;
  overflow: hidden;
}

.install {
  background-color: var(--main-color);
  text-align: center;
  font: bold 24px/100px Tahoma, sans-serif;
  height: 100px;
  width: 100%;
  cursor: pointer;
  border: 0;
  padding: 0;
}

.color-grid {
  position: absolute;
  z-index: 3;
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}

.cancel-color {
  opacity: 0.3;
  background: repeating-linear-gradient(
    45deg,
    black,
    black 5%,
    white 5%,
    white 10%
  );
  flex-grow: 1;
}

.color-grid > div { cursor: pointer; }

.player { background-color: aliceblue; }

.qrcode.big {
  position: absolute;
  top: 0;
  left: 0;
  max-width: 450px;
  width: 100%;
}

.qrcode {
  width: 300px;
  margin: auto;
}

@media (max-width: 450px) { .hidden2 { display: none; } }

.nameinput {
  padding: 10px 2px;
  width: 220px;
}

.namesubmit {
  background: #0d6efd;
  color: white;
  padding: 3px 10px;
}

.row {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.mirror { transform: scaleX(-1); }

.overlay {
  position: fixed;
  inset: 0;
  background: rgb(0 0 0 / 70%);
  transition: opacity 700ms;
  visibility: hidden;
  opacity: 0;
}

.overlay.show {
  visibility: visible;
  opacity: 1;
}

.popup {
  margin: 70px auto;
  padding: 20px;
  background: #fff;
  border-radius: 5px;
  width: 80%;
  position: relative;
  transition: all 5s ease-in-out;
}

.popup h2 {
  margin-top: 0;
  color: #333;
  font-family: Tahoma, Arial, sans-serif;
}

.popup .close {
  position: absolute;
  top: 20px;
  right: 30px;
  transition: all 400ms;
  font-size: 30px;
  font-weight: bold;
  text-decoration: none;
  color: #333;
}

.popup .close:hover { color: var(--player-color); }

.popup .content {
  max-height: 30%;
  overflow: auto;
}

@keyframes move-it {
  0% { background-position: initial; }

  100% { background-position: 100px 0; }
}

.loading {
  background: repeating-linear-gradient(
    45deg,
    #606dbc,
    #606dbc 5%,
    #465298 5%,
    #465298 10%
  );
  background-size: 100px 100px;
  animation: move-it 2s linear infinite;
}

.connected {
  background-color: #A00;
  height: 350px;
}

.spinner {
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: black;
  min-height: 100vh;
}

.spinner::after {
  animation: change-content 0.8s linear infinite;
  display: block;
  content: "⠋";
  font-size: 80px;
}

@keyframes change-content {
  10% { content: "⠙"; }
  20% { content: "⠹"; }
  30% { content: "⠸"; }
  40% { content: "⠼"; }
  50% { content: "⠴"; }
  60% { content: "⠦"; }
  70% { content: "⠧"; }
  80% { content: "⠇"; }
  90% { content: "⠏"; }
}

.flying-cards {
  /* Create a Responsive Square */
  box-sizing: border-box;
  background: var(--background-url) no-repeat center;
  background-size: cover;

  /* Set The Sprite as the Background */
  display: block;
  transition: background-image 0.5s ease-in-out;
  position: relative;
}

.flying-cards::after {
  position: absolute;
  width: 100%;
  content: "Waiting for players...";
  text-align: center;
  display: block;
  background-color: rgb(0 0 0 / 70%);
  color: white;
  top: 50%;
  transform: translateY(-50%);
}

.relative { position: relative; }

.player-guess-container {
  position: absolute;
  display: flex;
  flex-direction: column;
  gap: 5px;
  top: 0;
}

.player-guess {
  white-space: nowrap;

  /* text-overflow: ellipsis; */
  color: var(--player-color);
  font-size: 1.5rem;
}

.card-flip {
  width: var(--card-width);
  height: calc(var(--card-width) * 1.5);
  transition: transform 800ms;
  transform-style: preserve-3d;
  transform-origin: 100% 0%;
  cursor: pointer;
  position: relative;
  z-index: 1;
}

.transparent { opacity: 0; }

.card-flip.is-flipped { transform: rotateY(180deg); }

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
}

.absolute { position: absolute; }

.above {
  z-index: 1;
  transform: translateZ(10px);
}

.card-face-back {
  transform: rotateY(180deg);

  /* -webkit-backface-visibility: hidden; */
  backface-visibility: hidden;
}

.flip-class-cont { position: absolute; }

.slide { transform: translate(calc(1px * var(--dx)), calc(1px * var(--dy))); }

.long-animation { transition: transform 400ms; }

.highlight-good {
  opacity: 1;
  transform: scale(1);
  border-width: 10px;
  border-style: double;
}

.highlight-bad {
  opacity: 0.8;
  border: solid 5px;
  transform: scale(0.8);
}

.reveal { border-color: var(--player-color); }

.form-container {
  max-width: 400px;
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 8px;
  font-family: Arial, sans-serif;
}

.form-field {
  margin-bottom: 15px;
  display: flex;
  align-items: center;
  transition: background-color 0.2s ease;
}

.form-field:hover {
  background-color: #f8f9fa;
  color: black;
}

.form-input {
  margin-right: 10px;
  transform: scale(1.2);
  cursor: pointer;
}

.form-label {
  cursor: pointer;
  user-select: none;
  flex: 1;
}

/* Optional: Add visual feedback for changes */
.form-field.changed {
  background-color: #e8f5e8;
  border-left: 3px solid #28a745;
  padding-left: 10px;
}

.panel-header {
  display: flex;
  justify-content: flex-end;
  flex-direction: row;
  align-items: center;
  gap: 3px;
}

.control-panel {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: #323232;
  padding: 10px;
  border-radius: 5px;
  color: white;
  font-family: sans-serif;
  display: flex;
  z-index: 2;
  flex-direction: column;
  min-width: 320px;
  transition: min-height 0.3s ease, padding 0.3s ease, min-width 0.3s ease;
  gap: 5px;
}

.control-panel.minimized {
  min-width: auto;
  min-height: auto;
  gap: 0;
  display: block !important;
  margin-left: 0;
  padding: 5px;
  outline: none;
  outline-offset: 2px;
  border-radius: 3px;
}

.contrl-btn {
  display: grid;
  place-items: center;
  width: 50px;
  height: 50px;
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  font-size: 3rem;
  padding: 0 3px;
  font-family: monospace;
}

#minimize-btn, #maximize-btn {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  font-size: 3rem;
  padding: 0 3px;
}

#control-panel.minimized .panel-header #minimize-btn { display: none; }

#control-panel:not(.minimized) .panel-header #maximize-btn { display: none; }

#control-panel button:not(:disabled):active {
  background-color: #7a7a7a;
  transform: translateY(1px);
}

#control-panel button:not(:disabled):hover { background-color: #686868; }

.hidden { display: none; }
